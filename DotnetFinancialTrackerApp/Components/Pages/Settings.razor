@page "/settings"
@using DotnetFinancialTrackerApp.Models
@using DotnetFinancialTrackerApp.Services
@using DotnetFinancialTrackerApp.Components.Dialogs
@using DotnetFinancialTrackerApp.Components.Settings
@inject IUserService UserService
@inject IFamilyMemberService FamilyMemberService
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject NavigationManager Nav

<PageTitle>Settings</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="pa-4">
    <MudText Typo="Typo.h4" Class="mb-6" Style="font-weight: 700; color: #000;">Settings</MudText>

    <MudTabs Elevation="0" ApplyEffectsToContainer="true" Class="settings-tabs" PanelClass="pa-0 mt-4" @bind-ActivePanelIndex="_activeTabIndex">
        <MudTabPanel Text="Profile" Icon="@Icons.Material.Filled.Person">
            <ProfileTab CurrentUser="@_currentUser" OnUserUpdated="@HandleUserUpdated" />
        </MudTabPanel>

        <MudTabPanel Text="Family" Icon="@Icons.Material.Filled.Home">
            <FamilyTab FamilyMembers="@_familyMembers" OnFamilyUpdated="@HandleFamilyUpdated" />
        </MudTabPanel>
    </MudTabs>
</MudContainer>

@code {
    private FamilyMember? _currentUser;
    private List<FamilyMember> _familyMembers = new();
    private int _activeTabIndex = 0;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            _isLoading = true;

            // Load family members (now they are the same as users)
            _familyMembers = await UserService.GetUsersAsync();

            // Load current user (first user for demo)
            if (_familyMembers.Any())
            {
                _currentUser = _familyMembers.First();
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading settings: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private async Task HandleUserUpdated()
    {
        await LoadData();
        Snackbar.Add("Profile updated successfully", Severity.Success);
    }

    private async Task HandleFamilyUpdated()
    {
        await LoadData();
    }
}

<style>
.settings-tabs .mud-tabs-toolbar {
    background: transparent;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.settings-tabs .mud-tab {
    color: #666;
    font-weight: 600;
    text-transform: none;
    min-width: auto;
    padding: 12px 16px;
}

.settings-tabs .mud-tab.mud-tab-active {
    color: #000;
    background: rgba(0, 0, 0, 0.05);
    border-radius: 8px 8px 0 0;
}

.settings-tabs .mud-tabs-panels {
    min-height: 500px;
}
</style>
