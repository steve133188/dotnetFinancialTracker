@using Microsoft.AspNetCore.Components.Web
@using System.Collections.Generic

<MudButton @attributes="AdditionalAttributes"
           Variant="Variant"
           Color="Color"
           Disabled="Disabled"
           OnClick="OnClick"
           FullWidth="FullWidth"
           Class="@BuildClass()"
           StartIcon="@StartIcon"
           EndIcon="@EndIcon"
           Icon="@Icon"
           Href="@Href"
           Target="@Target"
           Size="@Size"
           ButtonType="@ButtonType">
    @ChildContent
</MudButton>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public Variant Variant { get; set; } = Variant.Filled;
    [Parameter] public Color Color { get; set; } = Color.Primary;
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }
    [Parameter] public bool FullWidth { get; set; }
    [Parameter] public string Class { get; set; } = string.Empty;
    [Parameter] public string? Icon { get; set; }
    [Parameter] public string? StartIcon { get; set; }
    [Parameter] public string? EndIcon { get; set; }
    [Parameter] public string? Href { get; set; }
    [Parameter] public string? Target { get; set; }
    [Parameter] public Size Size { get; set; } = Size.Medium;
    [Parameter] public ButtonType ButtonType { get; set; } = ButtonType.Button;
    [Parameter(CaptureUnmatchedValues = true)] public IDictionary<string, object>? AdditionalAttributes { get; set; }

    private string BuildClass() => string.IsNullOrWhiteSpace(Class) ? "ui-button" : $"ui-button {Class}";
}
