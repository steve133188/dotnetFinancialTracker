@using MudBlazor
@using DotnetFinancialTrackerApp.Models
@inject NavigationManager Nav

<MudDialog Class="quick-actions-dialog" MaxWidth="MaxWidth.Medium">
    <TitleContent>
        <div class="dialog-header">
            <MudIcon Icon="@Icons.Material.Filled.Bolt" Size="Size.Large" Color="Color.Default" Style="color: black;" />
            <MudText Typo="Typo.h5" Class="title-text">Quick Actions</MudText>
        </div>
    </TitleContent>
    <DialogContent>
        <div class="actions-grid">
            <!-- Add Transaction -->
            <MudCard Class="action-card transaction-card" Clickable="true" @onclick="() => NavigateToAddTransaction()">
                <MudCardContent Class="action-content">
                    <div class="action-icon-container">
                        <MudIcon Icon="@Icons.Material.Filled.Add" Size="Size.Large" Class="action-icon" />
                    </div>
                    <div class="action-text">
                        <MudText Typo="Typo.h6" Class="action-title">Add Transaction</MudText>
                        <MudText Typo="Typo.body1" Class="action-description">Record income or expense in under 10 seconds</MudText>
                    </div>
                </MudCardContent>
            </MudCard>

            <!-- Save Money to Jar -->
            <MudCard Class="action-card savings-card" Clickable="true" @onclick="() => NavigateToSavings()">
                <MudCardContent Class="action-content">
                    <div class="action-icon-container">
                        <MudIcon Icon="@Icons.Material.Filled.Savings" Size="Size.Large" Class="action-icon" />
                    </div>
                    <div class="action-text">
                        <MudText Typo="Typo.h6" Class="action-title">Save Money to Jar</MudText>
                        <MudText Typo="Typo.body1" Class="action-description">Put money aside for family goals</MudText>
                    </div>
                </MudCardContent>
            </MudCard>

            <!-- Modify Budget -->
            <MudCard Class="action-card budget-card" Clickable="true" @onclick="() => NavigateToBudgets()">
                <MudCardContent Class="action-content">
                    <div class="action-icon-container">
                        <MudIcon Icon="@Icons.Material.Filled.AccountBalance" Size="Size.Large" Class="action-icon" />
                    </div>
                    <div class="action-text">
                        <MudText Typo="Typo.h6" Class="action-title">Modify Family Budget</MudText>
                        <MudText Typo="Typo.body1" Class="action-description">Adjust monthly spending limits</MudText>
                    </div>
                </MudCardContent>
            </MudCard>

            <!-- View Reports -->
            <MudCard Class="action-card reports-card" Clickable="true" @onclick="() => NavigateToReports()">
                <MudCardContent Class="action-content">
                    <div class="action-icon-container">
                        <MudIcon Icon="@Icons.Material.Filled.Assessment" Size="Size.Large" Class="action-icon" />
                    </div>
                    <div class="action-text">
                        <MudText Typo="Typo.h6" Class="action-title">View Insights</MudText>
                        <MudText Typo="Typo.body1" Class="action-description">Family spending trends and insights</MudText>
                    </div>
                </MudCardContent>
            </MudCard>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" Elevation="0" OnClick="@Close" StartIcon="@Icons.Material.Filled.Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private MudDialogInstance Dialog { get; set; } = default!;

    private void NavigateToAddTransaction()
    {
        Nav.NavigateTo("/finance");
        Dialog.Close();
    }

    private void NavigateToSavings()
    {
        Nav.NavigateTo("/wellbeing");
        Dialog.Close();
    }

    private void NavigateToBudgets()
    {
        Nav.NavigateTo("/wellbeing");
        Dialog.Close();
    }

    private void NavigateToReports()
    {
        Nav.NavigateTo("/reports");
        Dialog.Close();
    }

    private void Close() => Dialog.Cancel();
}

<style>
.quick-actions-dialog {
    max-width: 600px !important;
    min-width: 480px;
}

.dialog-header {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 8px 0;
}

.title-text {
    font-weight: 700;
    color: #000000;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
}

.actions-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    padding: 20px 0;
}

.action-card {
    background: #FFFFFF;
    border: 2px solid rgba(0, 0, 0, 0.08);
    border-radius: 24px;
    box-shadow: 0 6px 24px rgba(0, 0, 0, 0.08);
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    cursor: pointer;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
    min-height: 140px;
    position: relative;
    overflow: hidden;
}

.action-card:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    border-color: rgba(0, 0, 0, 0.2);
}

.action-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #000000, #555555);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease;
}

.action-card:hover::before {
    transform: scaleX(1);
}

.transaction-card::before { background: linear-gradient(90deg, #000000, #333333); }
.savings-card::before { background: linear-gradient(90deg, #222222, #555555); }
.budget-card::before { background: linear-gradient(90deg, #444444, #777777); }
.reports-card::before { background: linear-gradient(90deg, #666666, #999999); }

.action-content {
    padding: 24px !important;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    height: 100%;
}

.action-icon-container {
    margin-bottom: 16px;
    padding: 16px;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.04);
    transition: all 0.3s ease;
}

.action-card:hover .action-icon-container {
    background: rgba(0, 0, 0, 0.08);
    transform: scale(1.1);
}

.action-icon {
    color: #000000;
    font-size: 32px !important;
}

.action-text {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.action-title {
    color: #000000;
    font-weight: 700;
    font-family: 'Inter', sans-serif;
    margin-bottom: 12px !important;
    font-size: 1.1rem;
}

.action-description {
    color: rgba(0, 0, 0, 0.65);
    font-family: 'Inter', sans-serif;
    line-height: 1.5;
    font-size: 0.9rem;
}

@@media (max-width: 767px) {
    .quick-actions-dialog {
        max-width: 95vw !important;
        min-width: unset;
    }

    .actions-grid {
        grid-template-columns: 1fr;
        gap: 16px;
        padding: 16px 0;
    }

    .action-content {
        padding: 20px !important;
    }

    .action-card {
        min-height: 120px;
    }
}

@@media (max-width: 479px) {
    .actions-grid {
        gap: 12px;
    }

    .action-content {
        padding: 16px !important;
    }

    .action-icon-container {
        padding: 12px;
        margin-bottom: 12px;
    }

    .action-icon {
        font-size: 28px !important;
    }
}
</style>
