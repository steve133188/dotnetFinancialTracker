@using DotnetFinancialTrackerApp.Models

<MudDialog MaxWidth="MaxWidth.Small">
    <TitleContent>
        <MudText Typo="Typo.h6">@Title</MudText>
    </TitleContent>

    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="_isValid" ValidationDelay="0">
            <MudStack Spacing="3">
                <MudTextField T="string"
                              Label="Category"
                              Variant="Variant.Outlined"
                              Required="true"
                              Immediate="true"
                              @bind-Value="_model.Category"
                              RequiredError="Category is required" />

                <MudNumericField T="decimal"
                                 Label="Budget Limit"
                                 Variant="Variant.Outlined"
                                 Immediate="true"
                                 Adornment="Adornment.Start"
                                 AdornmentText="$"
                                 @bind-Value="_model.Limit"
                                 Required="true"
                                 RequiredError="Budget limit is required"
                                 Validation="ValidateLimit" />

                <MudDatePicker Label="Month"
                               Variant="Variant.Outlined"
                               @bind-Date="_budgetMonth"
                               Required="true"
                               RequiredError="Month is required"
                               DateFormat="MMMM yyyy"
                               AdornmentIcon="@Icons.Material.Outlined.CalendarMonth" />
            </MudStack>
        </MudForm>
    </DialogContent>

    <DialogActions>
        <MudSpacer />
        <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Ok">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public Budget? Model { get; set; }

    private readonly Budget _model = new();
    private MudForm? _form;
    private bool _isValid;
    private DateTime? _budgetMonth;

    private string Title => _model.Id == 0 ? "Add Budget" : "Edit Budget";

    protected override void OnInitialized()
    {
        if (Model is not null)
        {
            _model.Id = Model.Id;
            _model.Category = Model.Category;
            _model.Limit = Model.Limit;
            _model.Month = Model.Month;
        }

        _budgetMonth = _model.Month == default ? new DateTime(DateTime.Today.Year, DateTime.Today.Month, 1) : _model.Month;
    }

    private string? ValidateLimit(decimal? value)
    {
        if (value is null or <= 0)
        {
            return "Budget limit must be greater than zero";
        }

        return null;
    }

    private void Cancel() => MudDialog.Cancel();

    private async Task Ok()
    {
        if (_form is null)
        {
            return;
        }

        await _form.Validate();

        if (!_isValid || _budgetMonth is null)
        {
            return;
        }

        var month = _budgetMonth.Value;
        _model.Month = new DateTime(month.Year, month.Month, 1);

        MudDialog.Close(DialogResult.Ok(_model));
    }
}
