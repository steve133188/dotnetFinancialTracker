@using DotnetFinancialTrackerApp.Models
@using DotnetFinancialTrackerApp.Data
@using Microsoft.EntityFrameworkCore
@inject AppDbContext DbContext
@inject DotnetFinancialTrackerApp.Services.IFamilyMemberService FamilyMemberSvc

<MudDialog MaxWidth="MaxWidth.Small">
    <TitleContent>
        <MudText Typo="Typo.h6">@Title</MudText>
    </TitleContent>

    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="_isValid" ValidationDelay="0">
            <MudStack Spacing="3">
                <MudSelect T="FamilyMember?"
                           Label="Family Member"
                           Variant="Variant.Outlined"
                           @bind-Value="_selectedMember"
                           ToStringFunc="@(m => m?.Name ?? "Select Member")"
                           Required="true"
                           RequiredError="Please select a family member">
                    @foreach (var member in _familyMembers)
                    {
                        <MudSelectItem Value="@member">@member.Name</MudSelectItem>
                    }
                </MudSelect>

                <MudSelect T="TransactionCategory?"
                           Label="Category"
                           Variant="Variant.Outlined"
                           @bind-Value="_model.Category"
                           ToStringFunc="@(c => c?.Name ?? "None")"
                           Required="true"
                           RequiredError="Category is required">
                    @foreach (var category in _categories)
                    {
                        <MudSelectItem Value="@category">@category.Name</MudSelectItem>
                    }
                </MudSelect>

                <MudNumericField T="decimal"
                                 Label="Amount"
                                 Variant="Variant.Outlined"
                                 Immediate="true"
                                 Adornment="Adornment.Start"
                                 AdornmentText="$"
                                 @bind-Value="_model.Amount"
                                 Required="true"
                                 RequiredError="Amount is required"
                                 Validation="@ValidateAmount" />

                <MudDatePicker Label="Date"
                               Variant="Variant.Outlined"
                               @bind-Date="_transactionDate"
                               Required="true"
                               RequiredError="Date is required"
                               AdornmentIcon="@Icons.Material.Outlined.Event" />

                <MudSelect T="TransactionType"
                           Label="Type"
                           Variant="Variant.Outlined"
                           @bind-Value="_model.Type">
                    <MudSelectItem Value="TransactionType.Expense">Expense</MudSelectItem>
                    <MudSelectItem Value="TransactionType.Income">Income</MudSelectItem>
                </MudSelect>

                <MudTextField T="string"
                              Label="Description"
                              Variant="Variant.Outlined"
                              Lines="3"
                              Immediate="true"
                              @bind-Value="_model.Description" />
            </MudStack>
        </MudForm>
    </DialogContent>

    <DialogActions>
        <MudSpacer />
        <MudButton Variant="Variant.Text" Color="Color.Default" Elevation="0" OnClick="@Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Default" Elevation="0" OnClick="@Ok" Style="background-color: black; color: white;">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public Transaction? Model { get; set; }

    private readonly Transaction _model = new();
    private MudForm? _form;
    private bool _isValid;
    private DateTime? _transactionDate;
    private List<TransactionCategory> _categories = new();
    private List<FamilyMember> _familyMembers = new();
    private FamilyMember? _selectedMember;

    private string Title => _model.Id == 0 ? "Add Transaction" : "Edit Transaction";

    protected override async Task OnInitializedAsync()
    {
        // Load categories
        _categories = await DbContext.TransactionCategories
            .Where(c => c.IsActive)
            .OrderBy(c => c.SortOrder)
            .ToListAsync();

        // Load family members
        var defaultFamilyId = await FamilyMemberSvc.GetDefaultFamilyIdAsync();
        _familyMembers = await FamilyMemberSvc.GetAsync(defaultFamilyId);

        if (Model is not null)
        {
            _model.Id = Model.Id;
            _model.FamilyMemberId = Model.FamilyMemberId;
            _model.Category = Model.Category;
            _model.CategoryId = Model.CategoryId;
            _model.Amount = Model.Amount;
            _model.Date = Model.Date;
            _model.Description = Model.Description;
            _model.Type = Model.Type;

            // Find the selected member
            _selectedMember = _familyMembers.FirstOrDefault(m => m.Id == Model.FamilyMemberId);
        }
        else
        {
            // Pre-select first family member for new transactions
            _selectedMember = _familyMembers.FirstOrDefault();
        }

        _transactionDate = _model.Date == default ? DateTime.Today : _model.Date;
    }

    private string? ValidateAmount(decimal? value)
    {
        if (value is null or <= 0)
        {
            return "Amount must be greater than zero";
        }

        return null;
    }

    private void Cancel() => MudDialog.Cancel();

    private async Task Ok()
    {
        if (_form is null)
        {
            return;
        }

        await _form.Validate();

        if (!_isValid || _transactionDate is null || _model.Category is null || _selectedMember is null)
        {
            return;
        }

        _model.Date = _transactionDate.Value;
        _model.CategoryId = _model.Category.Id;
        _model.FamilyMemberId = _selectedMember.Id;

        MudDialog.Close(DialogResult.Ok(_model));
    }
}
