@using DotnetFinancialTrackerApp.Models

<MudDialog MaxWidth="MaxWidth.Small">
    <TitleContent>
        <MudText Typo="Typo.h6">@Title</MudText>
    </TitleContent>

    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="_isValid" ValidationDelay="0">
            <MudStack Spacing="3">
                <MudTextField T="string"
                              Label="User"
                              Variant="Variant.Outlined"
                              Required="true"
                              Immediate="true"
                              @bind-Value="_model.User"
                              RequiredError="User is required" />

                <MudTextField T="string"
                              Label="Category"
                              Variant="Variant.Outlined"
                              Required="true"
                              Immediate="true"
                              @bind-Value="_model.Category"
                              RequiredError="Category is required" />

                <MudNumericField T="decimal"
                                 Label="Amount"
                                 Variant="Variant.Outlined"
                                 Immediate="true"
                                 Adornment="Adornment.Start"
                                 AdornmentText="$"
                                 @bind-Value="_model.Amount"
                                 Required="true"
                                 RequiredError="Amount is required"
                                 Validation="ValidateAmount" />

                <MudDatePicker Label="Date"
                               Variant="Variant.Outlined"
                               @bind-Date="_transactionDate"
                               Required="true"
                               RequiredError="Date is required"
                               AdornmentIcon="@Icons.Material.Outlined.Event" />

                <MudSelect T="bool"
                           Label="Type"
                           Variant="Variant.Outlined"
                           @bind-Value="_model.IsIncome">
                    <MudSelectItem Value="false">Expense</MudSelectItem>
                    <MudSelectItem Value="true">Income</MudSelectItem>
                </MudSelect>

                <MudTextField T="string"
                              Label="Description"
                              Variant="Variant.Outlined"
                              Lines="3"
                              Immediate="true"
                              @bind-Value="_model.Description" />
            </MudStack>
        </MudForm>
    </DialogContent>

    <DialogActions>
        <MudSpacer />
        <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Ok">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public Transaction? Model { get; set; }

    private readonly Transaction _model = new();
    private MudForm? _form;
    private bool _isValid;
    private DateTime? _transactionDate;

    private string Title => _model.Id == 0 ? "Add Transaction" : "Edit Transaction";

    protected override void OnInitialized()
    {
        if (Model is not null)
        {
            _model.Id = Model.Id;
            _model.User = Model.User;
            _model.Category = Model.Category;
            _model.Amount = Model.Amount;
            _model.Date = Model.Date;
            _model.Description = Model.Description;
            _model.IsIncome = Model.IsIncome;
        }

        _transactionDate = _model.Date == default ? DateTime.Today : _model.Date;
    }

    private string? ValidateAmount(decimal? value)
    {
        if (value is null or <= 0)
        {
            return "Amount must be greater than zero";
        }

        return null;
    }

    private void Cancel() => MudDialog.Cancel();

    private async Task Ok()
    {
        if (_form is null)
        {
            return;
        }

        await _form.Validate();

        if (!_isValid || _transactionDate is null)
        {
            return;
        }

        _model.Date = _transactionDate.Value;

        MudDialog.Close(DialogResult.Ok(_model));
    }
}
