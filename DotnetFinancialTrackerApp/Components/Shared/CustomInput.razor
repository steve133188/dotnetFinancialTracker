@using Microsoft.AspNetCore.Components

<div class="custom-input-group">
    <label class="custom-input-label">@Label</label>
    <input type="@InputType"
           class="custom-input-field @(IsValid ? "" : "invalid")"
           placeholder="@Placeholder"
           value="@Value"
           @oninput="OnValueChanged"
           @onblur="OnBlur"
           disabled="@Disabled" />
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="custom-input-error">
            <svg viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>
            </svg>
            @ErrorMessage
        </div>
    }
</div>

@code {
    [Parameter] public string Label { get; set; } = "";
    [Parameter] public string Value { get; set; } = "";
    [Parameter] public string Placeholder { get; set; } = "";
    [Parameter] public string InputType { get; set; } = "text";
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public bool IsValid { get; set; } = true;
    [Parameter] public string ErrorMessage { get; set; } = "";
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public EventCallback OnBlur { get; set; }

    private async Task OnValueChanged(ChangeEventArgs e)
    {
        Value = e.Value?.ToString() ?? "";
        await ValueChanged.InvokeAsync(Value);
    }
}